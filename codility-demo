# Write a function:

# def solution(A)

# that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.

# For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.

# Given A = [1, 2, 3], the function should return 4.

# Given A = [−1, −3], the function should return 1.

# Write an efficient algorithm for the following assumptions:

# N is an integer within the range [1..100,000];
# each element of array A is an integer within the range [−1,000,000..1,000,000].

def solution(A):
    # write your code in Python 3.8.10
    if max(A) < 0:
        return 1

    sorted_positive_list = sorted(n for n in set(A) if n > 0)

    for i in range(len(sorted_positive_list) - 1):
        diff = sorted_positive_list[i + 1] - sorted_positive_list[i]
        if diff > 1:
            return sorted_positive_list[i] + 1
    
    return max(sorted_positive_list) + 1